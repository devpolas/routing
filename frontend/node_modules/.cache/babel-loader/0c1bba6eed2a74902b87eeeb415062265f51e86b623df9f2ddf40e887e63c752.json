{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dpipo\\\\Projects\\\\routing\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetail() {\n  _s();\n  const data = useLoaderData();\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n_s(EventDetail, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventID;\n  const response = await fetch(\"http//:localhost:8080/events\" + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"fail to fetch details\"\n    }), {\n      status: 500\n    });\n  } else {\n    const data = await response.json();\n    return data.event;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventDetail","_s","data","console","log","events","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventID","response","fetch","ok","Response","JSON","stringify","message","status","json","$RefreshReg$"],"sources":["C:/Users/dpipo/Projects/routing/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useLoaderData } from \"react-router\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventDetail() {\r\n  const data = useLoaderData();\r\n  console.log(data);\r\n  return <EventsList events={data.event} />;\r\n}\r\n\r\nexport default EventDetail;\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventID;\r\n  const response = await fetch(\"http//:localhost:8080/events\" + id);\r\n  if (!response.ok) {\r\n    throw new Response(JSON.stringify({ message: \"fail to fetch details\" }), {\r\n      status: 500,\r\n    });\r\n  } else {\r\n    const data = await response.json();\r\n    return data.event;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAC5BO,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,oBAAOH,OAAA,CAACF,UAAU;IAACQ,MAAM,EAAEH,IAAI,CAACI;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACT,EAAA,CAJQD,WAAW;EAAA,QACLJ,aAAa;AAAA;AAAAe,EAAA,GADnBX,WAAW;AAMpB,eAAeA,WAAW;AAE1B,OAAO,eAAeY,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAAGH,EAAE,CAAC;EACjE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAwB,CAAC,CAAC,EAAE;MACvEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAMtB,IAAI,GAAG,MAAMe,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAOvB,IAAI,CAACI,KAAK;EACnB;AACF;AAAC,IAAAK,EAAA;AAAAe,YAAA,CAAAf,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}