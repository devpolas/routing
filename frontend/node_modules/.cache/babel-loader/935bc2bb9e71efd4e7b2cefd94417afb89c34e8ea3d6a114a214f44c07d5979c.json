{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dpipo\\\\Projects\\\\routing\\\\frontend\\\\src\\\\pages\\\\Events.js\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: fetchedEvents\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http//:localhost:8000/events\");\n  if (!response.ok) {\n    throw new Error(\"Fail to fetch data!\");\n  }\n  const data = await response.json();\n  return data.events;\n}\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","jsxDEV","_jsxDEV","EventsPage","events","fetchedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","Error","data","json","$RefreshReg$"],"sources":["C:/Users/dpipo/Projects/routing/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  return <EventsList events={fetchedEvents} />;\r\n}\r\n\r\nexport async function loader() {\r\n  const response = await fetch(\"http//:localhost:8000/events\");\r\n  if (!response.ok) {\r\n    throw new Error(\"Fail to fetch data!\");\r\n  }\r\n  const data = await response.json();\r\n  return data.events;\r\n}\r\n\r\nexport default EventsPage;\r\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EACpB,oBAAOD,OAAA,CAACF,UAAU;IAACI,MAAM,EAAEC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9C;AAACC,EAAA,GAFQP,UAAU;AAInB,OAAO,eAAeQ,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxC;EACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACZ,MAAM;AACpB;AAEA,eAAeD,UAAU;AAAC,IAAAO,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}